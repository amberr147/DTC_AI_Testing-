name: 🧪 DTC AI Testing CI/CD

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

env:
  NODE_VERSION: "22.19.0"

jobs:
  # 🔌 Job 1: API Testing
  api-testing:
    name: 🔌 API Backend Tests
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout Repository
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"

      - name: 🔧 Install Dependencies
        run: |
          npm ci
          npx playwright install --with-deps chromium

      - name: 🚀 Start API Server
        run: |
          npm run start:api &
          echo $! > api_server.pid
          sleep 15

      - name: ✅ Health Check API
        run: |
          curl -f http://localhost:8080 || echo "API server starting..."
          sleep 5

      - name: 🧪 Run API Tests
        run: npm run test:api
        env:
          CI: true
          HEADLESS: true

      - name: 🛑 Stop API Server
        if: always()
        run: |
          if [ -f api_server.pid ]; then
            kill $(cat api_server.pid) || true
          fi

      - name: 📊 Upload API Test Results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: api-test-results
          path: output/
          retention-days: 7

  # 🖥️ Job 2: E2E Testing
  e2e-testing:
    name: 🖥️ E2E Desktop Tests (Production)
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout Repository
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"

      - name: 🔧 Install Dependencies
        run: |
          npm ci
          npx playwright install --with-deps chromium

      - name: 🌐 Check Production Site Availability
        run: |
          echo "🔍 Testing production site availability..."
          curl -f https://dtchman.netlify.app || echo "⚠️ Production site may be down"
          echo "✅ E2E tests will run against: https://dtchman.netlify.app"

      - name: 🧪 Run E2E Tests
        run: npm run test:e2e
        env:
          APP_URL: https://dtchman.netlify.app
          CI: true
          HEADLESS: true

      - name: 📊 Upload E2E Screenshots
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: e2e-test-failures
          path: output/
          retention-days: 7

  # 📋 Test Summary
  test-summary:
    name: 📋 Test Results Summary
    runs-on: ubuntu-latest
    needs: [api-testing, e2e-testing]
    if: always()

    steps:
      - name: 📊 Create Test Summary
        run: |
          echo "## 🧪 CI/CD Test Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "| Test Type | Status | Duration |" >> $GITHUB_STEP_SUMMARY
          echo "|-----------|--------|----------|" >> $GITHUB_STEP_SUMMARY
          echo "| 🔌 API Tests | ${{ needs.api-testing.result == 'success' && '✅ Passed' || '❌ Failed' }} | - |" >> $GITHUB_STEP_SUMMARY
          echo "| 🖥️ E2E Tests | ${{ needs.e2e-testing.result == 'success' && '✅ Passed' || '❌ Failed' }} | - |" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Commit:** ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
          echo "**Branch:** ${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY

      - name: 🎉 Success Notification
        if: needs.api-testing.result == 'success' && needs.e2e-testing.result == 'success'
        run: |
          echo "✅ All tests passed successfully! 🎉" >> $GITHUB_STEP_SUMMARY

      - name: ⚠️ Failure Notification
        if: needs.api-testing.result == 'failure' || needs.e2e-testing.result == 'failure'
        run: |
          echo "❌ Some tests failed. Please check the logs above." >> $GITHUB_STEP_SUMMARY
